@model MDriven.ASPNETIdentity.ManageUserViewModel

<div class="account__pswd">
  <p class="manage__text-header"><i class="mi mi-lock"></i>Change password</p>

  @using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { @class = "auth-form", role = "form" }))
  {
    @Html.AntiForgeryToken()

    <div class="tk-auth-form__group">
      @Html.LabelFor(m => m.OldPassword, new { @class = "tk-auth-form__label" })
      @Html.PasswordFor(m => m.OldPassword, new { @class = "tk-auth-form__input", placeholder = "Old password" })
      @Html.ValidationMessageFor(m => m.OldPassword, "")
    </div>

    <div class="tk-auth-form__group">
      @Html.LabelFor(m => m.NewPassword, new { @class = "tk-auth-form__label" })
      @Html.PasswordFor(m => m.NewPassword, new { @class = "tk-auth-form__input", placeholder = "New password" })
      @Html.ValidationMessageFor(m => m.NewPassword, "")
    </div>

    <div class="tk-auth-form__group">
      @Html.LabelFor(m => m.ConfirmPassword, new { @class = "tk-auth-form__label" })
      @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "tk-auth-form__input", placeholder = "Confirm password" })
      @Html.ValidationMessageFor(m => m.ConfirmPassword, "")
    </div>
    
    <div class="tk-auth-form__group inline">
      <button type="submit" class="tk-button__native primary narrow ripple-effect pull-right">Change password</button>
    </div>
  }
</div>